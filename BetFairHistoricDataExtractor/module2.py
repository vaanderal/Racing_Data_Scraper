import pyodbc
import pandas
import sqlalchemy
from sqlalchemy import create_engine
import numpy
import os
import glob

#engine = sqlalchemy.create_engine('mssql+pyodbc://HOMELAB/WizardForm?driver=SQL Server?Trusted_Connection=yes')
engine = sqlalchemy.create_engine('mssql+pyodbc://ben:Myaa-123@HOMELAB/WizardForm?driver=SQL Server')


removena = lambda x: (x.replace('NA','0.0'))
removena1 = lambda x: (x.replace('na','0.0'))

df = pandas.read_csv('C:/scratch/ER/ER.csv', header=0, infer_datetime_format=True)
                     #converters={'odds':removena, 'Impact Form':removena1, 'Impact Fit':removena1, 'Impact Dist':removena1}, 
    #dtype = {'Old_Index': float,
    #'Meeting': str,
    #'Race_Number': float,
    #'Race_Name': str,
    #'Distance': float,
    #'Prize_Money': float,
    #'Class': str,
    #'Apprentice_Claim': str,
    #'Time': str,
    ##'Date': datetime64,
    #'Tab_Number': float,
    #'Form': str,
    #'Last_Finish_pos': float,
    #'Last-1_Finish_pos': float,
    #'Last-2_Finish_pos': float,
    #'Last-3_Finish_pos': float,
    #'Horse': str,
    #'BP': float,
    #'Weight': float,
    #'odds': float,
    #'Wrat': float,
    #'Trat': float,
    #'Starts': float,
    #'Wins': float,
    #'Places': float,
    #'win%': float,
    #'Place%': float,
    #'Class_Change': str,
    #'Field_NVARCHAR(MAX)ength': float,
    #'Distance_Change': str,
    #'Average_Prizemoney': float,
    #'Days_Since_Last_Start': float,
    #'Course_Wins': float,
    #'Course_Places': float,
    #'Course_Starts': float,
    #'Distance_Wins': float,
    #'Distance_Places': float,
    #'Distance_Starts': float,
    #'Course/Dist_Wins': float,
    #'Course/Dist_Places': float,
    #'Course/Dist_Starts': float,
    #'Firm_Wins': float,
    #'Firm_Places': float,
    #'Firm_Starts': float,
    #'Good_Wins': float,
    #'Good_Places': float,
    #'Good_Starts': float,
    #'Soft_Wins': float,
    #'Soft_Places': float,
    #'Soft_Starts': float,
    #'Heavy_Wins': float,
    #'Heavy_Places': float,
    #'Heavy_Starts': float,
    #'Wizard_Panel': float,
    #'Timeform_Panel': float,
    #'Best_Form_Panel': float,
    #'Recent_Form_Panel': float,
    #'Distance_Panel': float,
    #'Class_Panel': float,
    #'Concensus_Panel': float,
    #'Concensus_Pofloats': float,
    #'Trainer': str,
    #'_age': float,
    #'sex': str,
    #'Jockey': str,
    #'Allowance': str,
    ##'Espd': str,
    ##'Pace': str,
    ##'Impact_Form': float,
    ##'Impact_Fit': float,
    ##'Impact_Dist': float,
    ##'ATPG_Age': str,
    ##'ATPG_Trainer': str,
    #'RFS': float,
    #'1Up_Wins': float,
    #'1Up_Places': float,
    #'1Up_Starts': float,
    #'2Up_Wins': float,
    #'2Up_Places': float,
    #'2Up_Starts': float,
    #'3Up_Wins': float,
    #'3Up_Places': float,
    #'3Up_Starts': float,
    #'4Up_Wins': float,
    #'4Up_Places': float,
    #'4Up_Starts': float,
    #'5Up_Wins': float,
    #'5Up_Places': float,
    #'5Up_Starts': float,
    #'6Up_Wins': float,
    #'6Up_Places': float,
    #'6Up_Starts': float,
    #'7+Up_Wins': float,
    #'7+Up_Places': float,
    #'7+Up_Starts': float,
    #'Cur_RFS_Wins': float,
    #'Cur_RFS_Places': float,
    #'Cur_RFS_Starts': float,
    ##'Cur_RFS_Date1': datetime64,
    #'Cur_RFS_Base1': float,
    #'Cur_RFS_WFA1': float,
    ##'Cur_RFS_Date2': datetime64,
    #'Cur_RFS_Base2': float,
    #'Cur_RFS_WFA2': float,
    ##'Cur_RFS_Date3': datetime64,
    #'Cur_RFS_Base3': float,
    #'Cur_RFS_WFA3': float,
    #'Cur_Peak': float,
    ##'Cur_Peak_Date': datetime64,
    #'Last_Peak': float,
    ##'Last_Peak_Date': datetime64,
    #'Prev_Peak': float,
    ##'Prev_Peak_Date': datetime64,
    #'Dist_Peak': float,
    ##'Dist_Peak_Date': datetime64,
    #'Wet_Peak': float,
    ##'Wet_Peak_Date': datetime64,
    #'Win_Distances': str,
    #'Sim_Company_Wins': float,
    #'Sim_Company_Places': float,
    #'Sim_Company_Starts': float,
    #'NVARCHAR(MAX)ong_Company_Wins': float,
    #'NVARCHAR(MAX)ong_Company_Places': float,
    #'NVARCHAR(MAX)ong_Company_Starts': float,
    #'Last_Base_Rating': float,
    #'Last_WFA_Rating': float,
    ##'Last_Date': datetime64,
    #'Last_Finish_Pos': float,
    #'Last-1_Base_Rating': float,
    #'Last-1_WFA_Rating': float,
    ##'Last-1_Date': datetime64,
    #'Last-1_Finish_Pos': float,
    #'Last-2_Base_Rating': float,
    #'Last-2_WFA_Rating': float,
    ##'Last-2_Date': datetime64,
    #'Last-2_Finish_Pos': float,
    #'Last-3_Base_Rating': float,
    #'Last-3_WFA_Rating': float,
    ##'Last-3_Date': datetime64,
    #'Last-3_Finish_Pos': float,
    #'Last-4_Base_Rating': float,
    #'Last-4_WFA_Rating': float,
    ##'Last-4_Date': datetime64,
    #'Last-4_Finish_Pos': float,
    #'Last-5_Base_Rating': float,
    #'Last-5_WFA_Rating': float,
    ##'Last-5_Date': datetime64,
    #'Last-5_Finish_Pos': float,
    #'Last-6_Base_Rating': float,
    #'Last-6_WFA_Rating': float,
    ##'Last-6_Date': datetime64,
    #'Last-6_Finish_Pos': float,
    #'Last-7_Base_Rating': float,
    #'Last-7_WFA_Rating': float,
    ##'Last-7_Date': datetime64,
    #'Last-7_Finish_Pos': float,
    #'Last_Win_Base_Rating': float,
    #'Last_Win_WFA_Rating': float,
    ##'Last_Win_Date': datetime64,
    #'Last_Win-1_Base_Rating': float,
    #'Last_Win-1_WFA_Rating': float,
    ##'Last_Win-1_Date': datetime64,
    #'Last_Win-2_Base_Rating': float,
    #'Last_Win-2_WFA_Rating': float,
    ##'Last_Win-2_Date': datetime64,
    #'Last_Win-3_Base_Rating': float,
    #'Last_Win-3_WFA_Rating': float,
    ##'Last_Win-3_Date': datetime64,
    #'Last_Win-4_Base_Rating': float,
    #'Last_Win-4_WFA_Rating': float,
    ##'Last_Win-4_Date': datetime64,
    #'Last_Win-5_Base_Rating': float,
    #'Last_Win-5_WFA_Rating': float,
    ##'Last_Win-5_Date': datetime64,
    #'Joc_Loc12m_Wins': float,
    #'Joc_Loc12m_Places': float,
    #'Joc_Loc12m_Starts': float,
    #'Joc_Ovrl12m_Wins': float,
    #'Joc_Ovrl12m_Places': float,
    #'Joc_Ovrl12m_Starts': float,
    #'Joc/Horse_Wins': float,
    #'Joc/Horse_Places': float,
    #'Joc/Horse_Starts': float,
    #'Trn_Loc12m_Wins': float,
    #'Trn_Loc12m_Places': float,
    #'Trn_Loc12m_Starts': float,
    #'Trn_Loc5y_Wins': float,
    #'Trn_Loc5y_Places': float,
    #'Trn_Loc5y_Starts': float,
    #'Trn_Ovrl12m_Wins': float,
    #'Trn_Ovrl12m_Places': float,
    #'Trn_Ovrl12m_Starts': float,
    #'Joc/Trn_Wins': float,
    #'Joc/Trn_Places': float,
    #'Joc/Trn_Starts': float,
    #'Last_Dist': float,
    #'Last_Margin': float,
    #'Last_Weight': float,
    #'Last-1_Dist': float,
    #'Last-1_Margin': float,
    #'Last-1_Weight': float,
    #'Last-2_Dist': float,
    #'Last-2_Margin': float,
    #'Last-2_Weight': float,
    #'Last-3_Dist': float,
    #'Last-3_Margin': float,
    #'Last-3_Weight': float,
    #'Last_Crse': str,
    #'Last_Class': str,
    #'Last-1_Crse': str,
    #'Last-1_Class': str,
    #'Last-2_Crse': str,
    #'Last-2_Class': str,
    #'Last-3_Crse': str,
    #'Last-3_Class': str,
    #'Sire': str,
    #'Dam': str,
    #'G_Sire': str,
    #'Trainer_Location': str,
    #'Course_Peak': float,
    ##'Course_Peak_Date': datetime64,
    #'Last_SP': float,
    #'Last-1_SP': float,
    #'Last-2_SP': float,
    #'Last-3_SP': float,
    #'Scratched': str,
    ##'Last_Win_Date': datetime64,
    #'Last_Win_Days': float,
    ##'Last-1_Win_Date': datetime64,
    #'Last-1_WinDays': float,
    ##'Last-2_Win_Date': datetime64,
    #'Last-2_Win_Days': float,
    ##'Last-3_Win_Date': datetime64,
    #'Last-3_WinDays': float,
    ##'Last-4_Win_Date': datetime64,
    #'Last-4_Win_Days': float,
    ##'Last-5_Win_Date': datetime64,
    #'Last-5_WinDays': float,
    #'1Fav_Wins': float,
    #'1Fav_Places': float,
    #'1Fav_Starts': float,
    #'2Fav_Wins': float,
    #'2Fav_Places': float,
    #'2Fav_Starts': float,
    #'3-5Fav_Wins': float,
    #'3-5Fav_Places': float,
    #'3-5Fav_Starts': float,
    #'6+Fav_Wins': float,
    #'6+Fav_Places': float,
    #'6+Fav_Starts': float,
    #'Last-4_Weight': float,
    #'Last-5_Weight': float,
    #'Last-6_Weight': float,
    #'Last-7_Weight': float})

df['DateConverted'] = pandas.to_datetime(df['Date'], errors='coerce')
df.to_sql('HistoricForm1', con=engine, chunksize=10000)